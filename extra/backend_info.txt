Webhook => https://be7.in/winapi.php

<?php
// ==== SHOW ERRORS ====
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// ==== CORS HEADERS ====
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type");
header("Content-Type: application/json");

// ==== CONFIG ====
$host = "localhost"; 
$dbname = "u240376517_awin";
$username = "u240376517_awin";
$password = "bBVXzj7M/";

// ==== CONNECT ====
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die(json_encode(["status"=>"error","message"=>"DB Connection Failed: " . $conn->connect_error]));
}

// ==== HELPER FUNCTION ====
function response($status, $message, $data = null) {
    echo json_encode(["status"=>$status, "message"=>$message, "data"=>$data]);
    exit;
}

// ==== API ROUTES ====
$action = $_GET['action'] ?? '';

switch($action) {

    // 1. CREATE USER
    case "create_user":
    case "create_user":
    // generate unique random token
    $token = bin2hex(random_bytes(8));

    // get user IP
    $ip = $_SERVER['REMOTE_ADDR'] ?? '0.0.0.0';

    // insert new user
    $sql = "INSERT INTO users (token, ip) VALUES ('$token', '$ip')";
    if ($conn->query($sql)) {
        response("success", "User created", [
            "user_id" => $conn->insert_id,
            "token" => $token,
            "ip" => $ip
        ]);
    } else {
        response("error", "Query Failed: " . $conn->error);
    }
    break;


    // 2. UPDATE USER
    case "update_user":
        $user_id = $_POST['user_id'] ?? 0;
        if (!$user_id) response("error", "user_id required");

        $fields = [];
        foreach ($_POST as $key=>$val) {
            if ($key != "user_id") {
                $val = $conn->real_escape_string($val);
                $fields[] = "$key = '$val'";
            }
        }

        if (empty($fields)) response("error", "No fields to update");

        $sql = "UPDATE users SET ".implode(", ", $fields)." WHERE id=$user_id";
        if ($conn->query($sql)) {
            response("success", "User updated");
        } else {
            response("error", "Query Failed: " . $conn->error);
        }
        break;

    // 3. GET USER
    case "get_user":
    $user_id = $_GET['user_id'] ?? 0;
    if (!$user_id) response("error", "user_id required");

    // 1️⃣ Get user details
    $sql = "SELECT * FROM user_view WHERE id = $user_id";
    $result = $conn->query($sql);
    if (!$result || $result->num_rows == 0) {
        response("error", "User not found");
    }

    $user = $result->fetch_assoc();

    // 2️⃣ Get user transactions
    $tx_sql = "SELECT id, amount, type, created_on FROM transactions WHERE user_id = $user_id ORDER BY id DESC";
    $tx_result = $conn->query($tx_sql);

    $transactions = [];
    if ($tx_result && $tx_result->num_rows > 0) {
        while ($row = $tx_result->fetch_assoc()) {
            $transactions[] = $row;
        }
    }

    // 3️⃣ Send both in one JSON
    response("success", "User details with transactions", [
        "user" => $user,
        "transactions" => $transactions
    ]);
    break;

    // 4. DEFAULT
    default:
        response("error", "Invalid action. Use ?action=create_user | update_user | get_user");
}
?>
